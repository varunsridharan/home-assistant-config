esphome:
  name: weather-station

esp8266:
  board: nodemcuv2

# Enable logging
logger:

# Enable Home Assistant API
api:

ota:
  password: "38afc1e30ae8ce87b62ee493a7ede1f9"

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Weather-Station Fallback Hotspot"
    password: "rbBzxVojI7jA"

captive_portal:
    
text_sensor:
  - platform: version
    name: "Firmware Version"
    id: weather_station_version
    hide_timestamp: true

  - platform: template
    name: Uptime
    id: weather_station_uptime_human
    icon: mdi:clock-start

  - platform: wifi_info
    ip_address:
      name: IP Address
    ssid:
      name: Connected SSID
    bssid:
      name: Connected BSSID
    mac_address:
      name: Mac Address

switch:
  - platform: restart
    name: "Weather Station : Restart"

  - platform: shutdown
    name: "Weather Station : Shutdown"
  
  
i2c:
  sda: D6
  scl: D7
  scan: true
  id: i2c_bus_bmp280
  
  
sensor:

  - platform: bmp280
    i2c_id: i2c_bus_bmp280
    temperature:
      name: "bmp280 Temperature"
      oversampling: 16x
    pressure:
      name: "Air Pressure"
    address: 0x76
    update_interval: 120s
    
  - platform: dht
    pin: D5
    update_interval: 102s
    model: AM2302
    temperature:
      name: "Temperature"
      id: weather_station_temperature
    humidity:
      name: "Humidity"
      id: weather_station_humidity

  - platform: wifi_signal
    name: "WiFi Signal"
    id: weather_station_wifi_signal
    update_interval: 60s
    
  - platform: uptime
    name: Uptime Sensor
    id: uptime_sensor
    update_interval: 60s
    on_raw_value:
      then:
        - text_sensor.template.publish:
            id: weather_station_uptime_human
            state: !lambda |-
              int seconds = round(id(uptime_sensor).raw_state);
              int days = seconds / (24 * 3600);
              seconds = seconds % (24 * 3600);
              int hours = seconds / 3600;
              seconds = seconds % 3600;
              int minutes = seconds /  60;
              seconds = seconds % 60;
              return (
                (days ? to_string(days) + "d " : "") +
                (hours ? to_string(hours) + "h " : "") +
                (minutes ? to_string(minutes) + "m " : "") +
                (to_string(seconds) + "s")
              ).c_str();